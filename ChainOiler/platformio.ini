; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Versuch Ketten√∂ler mit Webservice
default_envs = esp32s2-debug

[common]
extra_scripts = pre:buildcount.py
build_type_d = debug
build_type_r = release
extra_flags_d = -O0 -DDEBUG
extra_flags_r = -O3 -DRELEASE -DNDEBUG
f_cpu = 2400000000L
my_partitions = partition_2ota.csv
my_monitor_port = COM4
my_monitor_speed = 115200
my_upload_port = COM4
my_upload_speed = 921600

[env:esp32s2-debug]
extra_scripts = ${common.extra_scripts}
platform = espressif32
board = esp32-s2-saola-1
framework = espidf
monitor_speed = ${common.my_monitor_speed}
upload_speed = ${common.my_upload_speed}
monitor_port = ${common.my_monitor_port}
upload_port = ${common.my_upload_port}
build_flags = -std=c++11  ${common.extra_flags_d}
build_type = ${common.build_type_d}
board_build.partitions = ${common.my_partitions}
board_build.f_cpu = ${common.f_cpu}

[env:esp32s2-production]
platform = espressif32
board = esp32-s2-saola-1
framework = espidf
monitor_speed = ${common.my_monitor_speed}
upload_speed = ${common.my_upload_speed}
monitor_port = ${common.my_monitor_port}
upload_port = ${common.my_upload_port}
build_flags = -std=c++11  ${common.extra_flags_r}
build_type = ${common.build_type_r}
board_build.partitions = ${common.my_partitions}
board_build.f_cpu = ${common.f_cpu}


